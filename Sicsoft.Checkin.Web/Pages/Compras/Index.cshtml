@page
@model GestionGastos20.Pages.Compras.IndexModel
@{
    ViewData["Title"] = "Compras Realizadas";

    var MiRol = int.Parse(((ClaimsIdentity)User.Identity).Claims.Where(d => d.Type == ClaimTypes.Role).Select(s1 => s1.Value).FirstOrDefault());




}


@using System.Globalization;
@{
    NumberFormatInfo formato = new CultureInfo("en-US").NumberFormat;
    formato.CurrencyGroupSeparator = ",";
    formato.NumberDecimalSeparator = ".";


}
@using Microsoft.AspNetCore.Http
@using System;
@using System.Collections.Generic;
@using System.IO;
@using System.Linq;
@using System.Security.Claims;
@using System.Threading.Tasks;
@using Microsoft.AspNetCore.Mvc;
@using Microsoft.AspNetCore.Mvc.RazorPages;
@using Microsoft.Extensions.Configuration;
@using Refit;
@inject IHttpContextAccessor httpContextAccessor


@{
    var Roles = ((ClaimsIdentity)User.Identity).Claims.Where(d => d.Type == "Roles").Select(s1 => s1.Value).FirstOrDefault().Split("|");
}


@section scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script src="~/lib/summernote/summernote-bs4.min.js"></script>
    <script src="~/lib/select2/js/select2.min.js"></script>
    <script src="~/lib/dropzone/dropzone.js"></script>
    <script src="~/lib/iCheck/icheck.js"></script>
    <script src="~/js/plugins/dataTables/datatables.min.js"></script>
    <script src="~/js/plugins/dataTables/dataTables.bootstrap4.min.js"></script>
    <script>
        $(document).ready(function () {
            jQuery(document).ready(function ($) {
                $(document).ready(function () {
                    $('.mi-selector').select2();
                });
                onChangePeriodo()
            });
            $(".js-example-responsive").select2({
                width: 'resolve',// need to override the changed default
                height: 'resolve'
            });

            $('.dataTables-example').DataTable({
                pageLength: 10,
                responsive: true,
                order: [[0, "desc"]]

            });



        });


        function ReportePDF() {

            var item = $("#idHtml").html();

            var opt = {
                margin: [10, 5, 15, 5],
                pagebreak: { before: '.cuidado' },

                image: { type: 'jpeg', quality: 0.98 },
                html2canvas: { scale: 2 },
                jsPDF: { format: 'letter', orientation: 'portrait' }
            };



            html2pdf().set(opt)
                .from(item)
                .save("ReporteLiquidaciones.pdf");
        }


        function LibroCompras() {
            var item = $("#htmlImprimir").html();

            var opt = {
                margin: [5, 5, 5, 5],
                pagebreak: { before: '.cuidado' },

                image: { type: 'jpeg', quality: 0.98 },
                html2canvas: { scale: 2 },
                jsPDF: { unit: 'mm', format: 'letter', orientation: 'portrait' }
            };



            html2pdf().set(opt)
                .from(item)
                .save("LibroCompras.pdf");
        }
        function LibroComprasExcel()
        {
            var wb = XLSX.utils.table_to_book(document.getElementById('tablaLibrosCompras'), { sheet: "Sheet1" });
            var wbout = XLSX.write(wb, { bookType: 'xlsx', type: 'binary' });

            function s2ab(s) {
                var buf = new ArrayBuffer(s.length);
                var view = new Uint8Array(buf);
                for (var i = 0; i < s.length; i++) view[i] = s.charCodeAt(i) & 0xFF;
                return buf;
            }

            var blob = new Blob([s2ab(wbout)], { type: "application/octet-stream" });
            var link = document.createElement('a');
            link.href = URL.createObjectURL(blob);
            link.download = 'LibroCompras.xlsx';
            link.click();
        }

        function CambiarEstado(idCierre) {
            Swal.fire({
                title: '¿Desea poner abierta esta liquidación?',
                showDenyButton: true,
                showCancelButton: false,
                confirmButtonText: `Aceptar`,
                denyButtonText: `Cancelar`,
                customClass: {
                    confirmButton: 'swalBtnColor',
                    denyButton: 'swalDeny'
                },
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        type: 'GET',

                        url: '@Url.Page("Index", "Estado")',
                        dataType: 'text',
                        data: { idB: idCierre },
                        headers: {
                            RequestVerificationToken: $('input:hidden[name="__RequestVerificationToken"]').val()
                        },
                        success: function (json) {

                            $("#divProcesando").hide();

                            if ($('.modal-backdrop').is(':visible')) {

                                $('body').removeClass('modal-open');
                                $('.modal-backdrop').hide();
                            }
                            console.log("resultado " + json);
                            if (json == "true") {
                                Swal.fire({
                                    title: "Ha sido enviado con éxito",

                                    icon: 'success',
                                    showCancelButton: false,

                                    confirmButtonText: 'OK',
                                    customClass: {
                                        confirmButton: 'swalBtnColor',

                                    },
                                }).then((result) => {
                                    if (result.isConfirmed) {
                                        window.location.href = window.location.href.split("/Editar")[0];
                                    }
                                })

                            } else {
                                Swal.fire({
                                    icon: 'error',
                                    title: 'Oops...',
                                    text: 'Ha ocurrido un error al intentar enviar'

                                })
                            }
                        },

                        beforeSend: function (xhr) {

                            $("#divProcesando").modal("show");
                        },
                        complete: function () {

                        },
                        error: function (error) {

                        }
                    });
                }
            })

        }

        //Enviar a SAP

        function EnviarAsiento(idCierre) {
            Swal.fire({
                title: '¿Desea crear asiento en SAP de esta liquidación?',
                showDenyButton: true,
                showCancelButton: false,
                confirmButtonText: `Aceptar`,
                denyButtonText: `Cancelar`,
                customClass: {
                    confirmButton: 'swalBtnColor',
                    denyButton: 'swalDeny'
                },
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        type: 'GET',

                        url: '@Url.Page("Index", "Asiento")',
                        dataType: 'json',
                        data: { idB: idCierre },
                        headers: {
                            RequestVerificationToken: $('input:hidden[name="__RequestVerificationToken"]').val()
                        },
                        success: function (json) {

                            $("#divProcesando").hide();

                            if ($('.modal-backdrop').is(':visible')) {

                                $('body').removeClass('modal-open');
                                $('.modal-backdrop').hide();
                            }
                            console.log("resultado " + json);
                            if (json.status == 1) {
                                Swal.fire({
                                    title: "Ha sido enviado con éxito",

                                    icon: 'success',
                                    showCancelButton: false,

                                    confirmButtonText: 'OK',
                                    customClass: {
                                        confirmButton: 'swalBtnColor',

                                    },
                                }).then((result) => {
                                    if (result.isConfirmed) {
                                        location.reload();
                                    }
                                })

                            } else {
                                if (typeof (json) == "string") {
                                    Swal.fire({
                                        icon: 'error',
                                        title: 'Oops...',
                                        text: json

                                    })
                                } else {

                                    Swal.fire({
                                        icon: 'error',
                                        title: 'Oops...',
                                        text: json.message

                                    })
                                }
                            }
                        },

                        beforeSend: function (xhr) {

                            $("#divProcesando").modal("show");
                        },
                        complete: function () {

                        },
                        error: function (error) {

                        }
                    });
                }
            })

        }

        function onChangePeriodo() {




            if ($("#Periodo").val() != '') {
                var FechaInicial = '@Model.filtro.FechaInicio.Year' + '-';
                var MesI = '0';


                if (parseInt('@Model.filtro.FechaInicio.Day') >= 1) {

                    var Periodos = ["Enero", "Febrero", "Marzo", "Abril", "Mayo", "Junio", "Julio", "Agosto", "Setiembre", "Octubre", "Noviembre", "Diciembre"];

                    var position = 0;
                    var i = 0;

                    for (i = 0; i < Periodos.length; i++) {
                        if ($("#Periodo").val() == Periodos[i]) {
                            position = i;
                        }



                    }


                    MesI = position + 1;
                    if (parseInt(MesI) < 10) {
                        FechaInicial += '0' + MesI;

                    } else {
                        FechaInicial += MesI;
                    }
                } else {
                    MesI = '@Model.filtro.FechaInicio.Month';
                    if (parseInt(MesI) < 10) {
                        FechaInicial += '0' + '@Model.filtro.FechaInicio.Month';

                    } else {
                        FechaInicial += '@Model.filtro.FechaInicio.Month';
                    }
                }



                if (parseInt('@Model.filtro.FechaInicio.Day') > 1) {

                    FechaInicial += '-' + '0' + '1';


                }
                else {
                    MesI = '@Model.filtro.FechaInicio.Day'

                    if (parseInt(MesI) < 10) {
                        FechaInicial += '-' + '0' + '@Model.filtro.FechaInicio.Day';

                    } else {
                        FechaInicial += '-' + '@Model.filtro.FechaInicio.Day';
                    }
                }






                var FechaFinal = '@Model.filtro.FechaFinal.Year' + '-';
                var MesF = '@Model.filtro.FechaFinal.Month';

                var Periodos = ["Enero", "Febrero", "Marzo", "Abril", "Mayo", "Junio", "Julio", "Agosto", "Setiembre", "Octubre", "Noviembre", "Diciembre"];

                var position = 0;
                var i = 0;

                for (i = 0; i < Periodos.length; i++) {
                    if ($("#Periodo").val() == Periodos[i]) {
                        position = i;
                    }



                }


                MesF = position + 1;



                if (parseInt(MesF) < 10) {
                    FechaFinal += '0' + MesF;

                } else {
                    FechaFinal += MesF;
                }

                var d = new Date(parseInt('@Model.filtro.FechaFinal.Year'), position + 1, 0);
                MesF = '@Model.filtro.FechaFinal.Day'

        @*if (parseInt(MesF) < 10) {
                FechaFinal += '-'+'0' + '@Model.filtro.FechaFinal.Day';

                } else {
                FechaFinal += '-'+'@Model.filtro.FechaFinal.Day';
                }*@

                    FechaFinal += '-' + d.getDate();

                $("#FecInicial").val(FechaInicial);
                $("#FecFinal").val(FechaFinal);

                $("#FecInicial").attr("readonly", "readonly");
                $("#FecFinal").attr("readonly", "readonly");
            } else {
                console.log("Lo va a quitar");
                $("#FecInicial").removeAttr("readOnly");
                $("#FecFinal").removeAttr("readOnly");
            }
        }
    </script>
}

<!-- Content Header (Page header) -->
<section class="content-header">
    <h1>
        Compras
    </h1>
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a href="#"><i class="ti-dashboard"></i></a></li>
        <li class="breadcrumb-item active">Listado Compras</li>
    </ol>
</section>
<!-- Main content -->
<section class="content">
    <div class="row">
        <div class="col-12">
            <div class="box">
                <div class="box-header with-border">
                    <div class="row">
                        <div class="col-sm-8"> <h4 class="box-title">Filtro</h4></div>


                    </div>


                </div>
                <div class="box-body">
                    <form method="get">
                        <div class="row">
                            <div class="col-sm-4 pr-1">
                                <div class="form-group">
                                    <label>Compras</label>
                                    <select asp-for="filtro.Texto" id="Periodo" onchange="javascript: onChangePeriodo();" class="form-control  mi-selector">
                                        <option value="" selected>-Periodo-</option>


                                        <option value="Enero">Enero</option>
                                        <option value="Febrero">Febrero</option>
                                        <option value="Marzo">Marzo</option>
                                        <option value="Abril">Abril</option>
                                        <option value="Mayo">Mayo</option>
                                        <option value="Junio">Junio</option>
                                        <option value="Julio">Julio</option>
                                        <option value="Agosto">Agosto</option>
                                        <option value="Setiembre">Setiembre</option>
                                        <option value="Octubre">Octubre</option>
                                        <option value="Noviembre">Noviembre</option>
                                        <option value="Diciembre">Diciembre</option>


                                    </select>
                                </div>


                            </div>

                            <div class="col-sm-4 pl-1">
                                <div class="form-group">
                                    <label>Estado</label>
                                    <select asp-for="filtro.Estado" id="idEstado" class="form-control  mi-selector">
                                        <option value="NULL" selected>-Estado-</option>


                                        <option value="P">Abiertas</option>
                                        <option value="A">Aprobadas</option>
                                        <option value="R">Rechazadas</option>
                                        <option value="E">Espera</option>

                                    </select>
                                </div>
                            </div>

                            @if (!string.IsNullOrEmpty(Roles.Where(a => a == "8").FirstOrDefault()) || !string.IsNullOrEmpty(Roles.Where(a => a == "22").FirstOrDefault()))
                            {
                                <div class="col-sm-4 pl-1">
                                    <div class="form-group">
                                        <label>Usuario</label>
                                        <select asp-for="filtro.Codigo1" id="idUsuario" class="form-control  mi-selector">
                                            <option value="0" selected>-Usuario-</option>

                                            @foreach (var item in Model.Usuarios)
                                            {
                                                <option value="@item.id">@item.id - @item.Nombre</option>
                                            }


                                        </select>

                                    </div>
                                </div>
                            }
                            <div class="col-sm-12">
                                <br />
                            </div>
                            <div class="col-sm-5 pl-1">
                                <label class="col-form-label">Fecha Inicial:</label>
                                <input class="form-control" id="FecInicial" type="date" asp-for="filtro.FechaInicio" />
                            </div>
                            <div class="col-sm-5 pl-1">
                                <label class="col-form-label">Fecha Final:</label>
                                <input class="form-control" id="FecFinal" type="date" asp-for="filtro.FechaFinal" />
                            </div>

                            <div class="col-sm-2 pl-1" style="text-align: center; padding-top: 2%;">
                                <button title="Buscar" type="submit" class="btn btn-rounded btn-outline-primary"> <i class="fa fa-search"></i></button>
                            </div>
                            <div class="col-sm-12">
                                <br />
                            </div>

                            @if (((ClaimsIdentity)User.Identity).Claims.Where(d => d.Type == "Pais").Select(s1 => s1.Value).FirstOrDefault() == "G")
                            {
                                <div class="col-sm-3">
                                    <button title="Libro de Compras" type="button" class="btn btn-rounded btn-outline-danger" onclick="javascript: LibroCompras()">Libro de Compras PDF</button>
                                </div>
                                <div class="col-sm-3">
                                    <button title="Libro de Compras" type="button" class="btn btn-rounded btn-outline-primary" onclick="javascript: LibroComprasExcel()">Libro de Compras EXCEL</button>
                                </div>
                            }
                          





                        </div>

                    </form>
                </div>
            </div>

            <div class="box">
                <div class="box-header with-border">
                    <div class="row">
                        <div class="col-sm-8"> <h4 class="box-title">Compras Realizadas</h4></div>
                        @*<div class="col-sm-4"> <a asp-page="Nuevo" style="color: #57b846;" title="Agregar"><i class="fa fa-plus"></i> Agregar Compra</a></div>*@

                    </div>


                </div>
                <!-- /.box-header -->
                <div class="box-body">
                    <div class="table-responsive">
                        <table id="example1" class="table table-bordered table-striped">
                            <thead>
                                <tr>
                                    <th>Acción</th>
                                    <th>Consecutivo Hacienda</th>
                                    <th>Fecha</th>
                                    <th>Céd. Proveedor </th>
                                    <th>Proveedor</th>
                                    <th>Moneda </th>
                                    <th>Total </th>
                                    <th>Estado</th>
                                    <th>Usuario</th>


                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model.Objeto)
                                {
                                    <tr>
                                        <td align="center" style="padding-top:15px;">
                                            @if (!string.IsNullOrEmpty(Roles.Where(a => a == "23").FirstOrDefault()))
                                            {
                                                @if (item.idCierre != 0 && item.idCierre != null)
                                                {
                                                    <a asp-page="./Editar" asp-route-id="@item.id" title="Editar" class="fa fa-edit icono"> </a>
                                                }
                                            }
                                        </td>
                                        <td align="left" style="padding-top: 15px;"><a style="font-size:15px;" href="@item.PdfFactura" target="_blank">@item.ConsecutivoHacienda</a></td>


                                        <td>
                                            @item.FecFactura.Value.ToString("dd/MM/yyyy")
                                        </td>
                                        <td align="left" style="padding-top:15px;">
                                            @if (item.CodProveedor.Contains("["))
                                            {
                                                <a style="font-size:15px;  ">   @item.CodProveedor.Split("[")[0] </a>

                                            }
                                            else
                                            {
                                                <a style="font-size:15px;  ">   @item.CodProveedor</a>

                                            }

                                        </td>
                                        <td align="left" style="padding-top:15px;"><a style="font-size:15px;  "> @item.NomProveedor</a></td>


                                        <td align="center" style="padding-top:15px;">
                                            <a style="font-size:15px;  ">
                                                @item.CodMoneda
                                            </a>
                                        </td>

                                        <td align="right" style="padding-top:15px;"><a style="font-size:15px;  "> @decimal.Round(item.TotalComprobante.Value, 2).ToString("N", formato)</a></td>


                                        <td align="center" style="padding-top:15px;">
                                            @if (item.idCierre != 0 && item.idCierre != null)
                                            {

                                                <button class="btn btn-outline btn-rounded btn-success"> Asignada</button>

                                            }
                                            else
                                            {
                                                <button class="btn btn-outline btn-rounded btn-danger"> No Asignado</button>

                                            }




                                        </td>

                                        <td align="left" style="padding-top:15px;">
                                            <a style="font-size:15px;  ">
                                                @(item.Usuario == 0 ? "N/A" : Model.Usuarios.Where(a => a.id == item.Usuario).FirstOrDefault() == null ? "N/A" : Model.Usuarios.Where(a => a.id == item.Usuario).FirstOrDefault().Nombre)
                                            </a>
                                        </td>


                                    </tr>

                                }


                            </tbody>
                            <tfoot>
                                <tr>
                                    <th>Acción</th>
                                    <th>Consecutivo Hacienda</th>
                                    <th>Fecha</th>
                                    <th>Céd. Proveedor </th>
                                    <th>Proveedor</th>
                                    <th>Moneda </th>
                                    <th>Total </th>
                                    <th>Estado</th>
                                    <th>Usuario</th>


                                </tr>
                            </tfoot>
                        </table>
                    </div>
                </div>
                <!-- /.box-body -->
            </div>
            <!-- /.box -->
        </div>
        <!-- /.col -->
    </div>
    <!-- /.row -->
</section>
<!-- /.content -->

<!--Impresion Guatemala-->
<div id="htmlImprimir" style="font-family: 'Courier New', Courier, monospace;   margin: 0; padding: 0;" hidden>
    <h4 style="text-align: center; font-size: 15px;">AGRICENTER GUATEMALA S.A <br> LIBRO DE COMPRAS<br>Aplicables a Crédito Fiscal </h4>



    <table style=" width: 100%; border-collapse: collapse; font-size: 10px;" id="tablaLibrosCompras">
        <thead>
            <tr >
                <th style=" border: 1px solid black;  padding: 2px;  text-align: center; background-color: #f2f2f2;">Fecha Documento</th>
                <th style=" border: 1px solid black;  padding: 2px;  text-align: center; background-color: #f2f2f2;">Numero Documento</th>
                <th style=" border: 1px solid black;  padding: 2px;  text-align: center; background-color: #f2f2f2;">Clase Documento </th>
                <th style=" border: 1px solid black;  padding: 2px;  text-align: center; background-color: #f2f2f2;">NIT o Cédula del Proveedor </th>
                <th style=" border: 1px solid black;  padding: 2px;  text-align: center; background-color: #f2f2f2;">Nombre del Proveedor </th>
                <th style=" border: 1px solid black;  padding: 2px;  text-align: center; background-color: #f2f2f2;">Moneda </th>
                <th style=" border: 1px solid black;  padding: 2px;  text-align: center; background-color: #f2f2f2;">Total sin I.V.A</th>
                <th style=" border: 1px solid black;  padding: 2px;  text-align: center; background-color: #f2f2f2;">Total I.V.A</th>
                <th style=" border: 1px solid black;  padding: 2px;  text-align: center; background-color: #f2f2f2;">Total</th>

            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Objeto)
            {
                <tr>
                    <td style="border: 1px solid black;  padding: 2px;  text-align: center;  ">  @item.FecFactura.Value.ToString("dd/MM/yyyy") </td>
                    <td style="border: 1px solid black;  padding: 2px;  text-align: center;  ;">
                        @item.ClaveHacienda
                    </td>
                    <td style="border: 1px solid black;  padding: 2px;  text-align: center;  ">  Fact. </td>


                    <td style="border: 1px solid black;  padding: 2px;  text-align: center;  "> @item.CodProveedor</td>
                    <td style="border: 1px solid black;  padding: 2px;  text-align: center;"> @item.NomProveedor</td>
                    <td style="border: 1px solid black;  padding: 2px;  text-align: center;"> @item.CodMoneda</td>
                    <td style="border: 1px solid black;  padding: 2px;  text-align: center;">@decimal.Round(item.TotalComprobante.Value - item.TotalImpuesto.Value, 2).ToString("N", formato)</td>
                    <td style="border: 1px solid black;  padding: 2px;  text-align: center;">@decimal.Round(item.TotalImpuesto.Value, 2).ToString("N", formato)</td>
                    <td style="border: 1px solid black;  padding: 2px;  text-align: center;">@decimal.Round(item.TotalComprobante.Value, 2).ToString("N", formato)</td>

                </tr>
              
            }
            <tr>
                <td style="border: 1px solid black;  padding: 2px;  text-align: center;" colspan="6">Total</td>
                <td style="border: 1px solid black;  padding: 2px;  text-align: center;">@decimal.Round(Model.Objeto.Sum(a => a.TotalComprobante).Value - Model.Objeto.Sum(a => a.TotalImpuesto).Value, 2).ToString("N", formato)</td>
                <td style="border: 1px solid black;  padding: 2px;  text-align: center;">@decimal.Round(Model.Objeto.Sum(a => a.TotalImpuesto).Value, 2).ToString("N", formato)</td>
                <td style="border: 1px solid black;  padding: 2px;  text-align: center;">@decimal.Round(Model.Objeto.Sum(a => a.TotalComprobante).Value, 2).ToString("N", formato)</td>

            </tr>

        </tbody>

    </table>
    <br>
    <table style=" width: 100%; border-collapse: collapse; font-size: 10px;">
        <thead>
            <tr>
                <th colspan="2" style=" border: 1px solid black;  padding: 2px;  text-align: center; background-color: #f2f2f2;">Aplica Crédito Fiscal</th>
                <th style =" border: 1px solid black;  padding: 2px;  text-align: center; background-color: #f2f2f2;">I.V.A.</th>
                <th style=" border: 1px solid black;  padding: 2px;  text-align: center; background-color: #f2f2f2;">Total General</th>

            </tr>
        </thead>
        <tbody>
            <tr>
                <td style="border: 1px solid black;  padding: 2px;  text-align: center;">Total Facturas</td>
                <td style="border: 1px solid black;  padding: 2px;  text-align: center;">@decimal.Round(Model.Objeto.Sum(a => a.TotalComprobante).Value - Model.Objeto.Sum(a => a.TotalImpuesto).Value, 2).ToString("N", formato)</td>
                <td style="border: 1px solid black;  padding: 2px;  text-align: center;">@decimal.Round(Model.Objeto.Sum(a => a.TotalImpuesto).Value, 2).ToString("N", formato)</td>
                <td style="border: 1px solid black;  padding: 2px;  text-align: center;">@decimal.Round(Model.Objeto.Sum(a => a.TotalComprobante).Value, 2).ToString("N", formato)</td>

            </tr>
          
        </tbody>
    </table>

</div>
